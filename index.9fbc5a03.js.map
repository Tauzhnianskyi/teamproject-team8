{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BCyBIC,EAvByBC,EADzBF,EAAA,UACoCG,SAAS,CAAC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAC7F,IAAIC,EAAQC,EAAiB,MAAVL,EAAiBA,EAAUD,EAAUO,aAAe,GAAKC,EAAOR,EAAUS,MAAMC,cAAeC,EAAO,WAAYC,EAAOZ,EAAUa,iBAAkBC,EAAiBd,EAAUc,gBAAkB,SAASC,EAAQC,GAClO,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,EAKtB,MAAO,qCACHJ,SAAQP,EAAgH,OAArGA,EAASS,EAAeZ,EAAQ,QAAoB,MAAVD,EAAiBa,EAAeb,EAAO,MAAQA,IAAmBI,EAASG,KAA2BG,EAASN,EAAOe,KAAKd,EAAO,CAACe,KAAO,KAAKC,KAAO,GAAGlB,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAASrB,GAC1S,IACAO,SAAQP,EAAoH,OAAzGA,EAASS,EAAeZ,EAAQ,UAAsB,MAAVD,EAAiBa,EAAeb,EAAO,QAAUA,IAAmBI,EAASG,KAA2BG,EAASN,EAAOe,KAAKd,EAAO,CAACe,KAAO,OAAOC,KAAO,GAAGlB,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAASrB,GAChT,a,EACJuB,SAAW,CAAC,EAAE,YAAYC,KAAO,SAAS7B,EAAUC,EAAOC,EAAQC,EAASC,GAC1E,IAAI0B,EAON,OAA8R,OAArRA,GAPsB9B,EAAUc,gBAAkB,SAASC,EAAQC,GACtE,GAAIC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,GAC/C,OAAOD,EAAOC,E,GAKWd,EAAQ,QAAQkB,KAAe,MAAVnB,EAAiBA,EAAUD,EAAUO,aAAe,GAAIN,EAAO,CAACoB,KAAO,OAAOC,KAAO,GAAGS,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKmB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,GAAGC,IAAM,CAACF,KAAO,EAAEC,OAAS,OAAiBI,EAAS,E,EAC9SK,SAAU,I,sBDdOC,SAASC,cAAc,eAA1C,MACMC,EAASF,SAASC,cAAc,cAatCE,eAAeC,IACb,MAAMC,QAXRF,iBACI,MAAMG,QAAiBC,MACrB,yDAAyDhD,EAAAiD,WAE3D,GAAIF,EAASG,GACX,aAAaH,EAASI,OAExB,MAAM,IAAIC,YAAYL,EAASM,O,CAIZC,GAErB,OADAC,QAAQC,IAAIV,GACLA,C,EAGFF,iBAGL,MAAMa,QAAmCZ,IAC3CU,QAAQC,IAAIC,GACV,MAAMC,EAAQD,EAA2BX,OAAOa,KAAIC,GAAMA,IAC1DF,EAAMG,KALS,IAMf,MAAMC,EAASJ,EAAMC,KAAIC,GAAM1D,EAAQ,C,GAAE0D,MACzCjB,EAAOoB,UAAY,GACnBpB,EAAOqB,mBAAmB,YAAaF,E,CAGzCG","sources":["src/js/filter.js","src/templates/options.hbs"],"sourcesContent":["import {API_KEY} from './api-service'\nimport { addLoader, removeLoader } from './loader';\nimport movieCardTpl from '../templates/movie-card.hbs';\nimport options from './../templates/options.hbs'\nimport {\n  fetchInitialData,\n  convertResponseDataToObject,\n  renderUI,\n} from './renderHomePageUI';\nimport { getGenres } from './fetchGenres';\nconst moviesList = document.querySelector('.movie-list');\nconst select = document.querySelector('.js-select')\n\n\nasync function getOptions() {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    throw new Error(await response.text());\n  }\n\nasync function getOptionsGenres() {\n  const genres = await getOptions();\n  console.log(genres);\n  return genres;\n}\n\nexport async function generateOptions() {\n  let emptyObj = {};\n\n  const dataForGenerationOfOptions = await getOptionsGenres();\nconsole.log(dataForGenerationOfOptions);\n  const array = dataForGenerationOfOptions.genres.map(el => el);\n  array.push(emptyObj);\n  const markup = array.map(el => options({ el }));\n  select.innerHTML = '';\n  select.insertAdjacentHTML('beforeend', markup);\n}\n\ngenerateOptions()\n  async function sortByGenre(genre) {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=${genre}&language=en-US&sort_by=popularity.desc&include_adult=true&include_video=false`,\n    );\n\n    if (response.ok) {\n      \n      return await response.json();\n      \n    }\n   \n    throw new Error(await response.text());\n  }\n\nexport async function filterByGenres(genre,page) {\n  try {\n    if (page === 1) {\n      moviesList.innerHTML = '';\n    }\n    const genresDictionary = await getGenres();\n    console.log(genresDictionary);\n    genresArr = Object.values(genresDictionary);\n    const targetGenre = genresArr.find(g => g.name === genre).id;\n    console.log(targetGenre);\n    const results = await sortByGenre(targetGenre);\nconsole.log(results);\n  } catch (err) {\n    console.error(err);\n\n  }\n}\n \n// async function render(data) {\n//   const genres = await getGenres().then(list => {\n// console.log(list);\n//     return list.genres;\n//   });\n//   const resultsGenre = await convertResponseDataToObject(data);\n//   resultsGenre.map(res => {console.log(res.genres); res.genres})\n//   const cardsGallery = movieCardTpl({ resultsGenre });\n//   console.log(resultsGenre);\n//   moviesList.insertAdjacentHTML('beforeend', cardsGallery);\n// }\n\n\n\n\n \n","{{#each this}}\n<option class=\"options\" data-code={{id}}>{{name}}</option>\n{{/each}}"],"names":["$7me8F","parcelRequire","$dac0b969cb541434$export$2e2bcd8739ae039","$parcel$interopDefault","template","container","depth0","helpers","partials","data","helper","alias1","nullContext","alias2","hooks","helperMissing","alias3","alias4","escapeExpression","lookupProperty","parent","propertyName","Object","prototype","hasOwnProperty","call","name","hash","loc","start","line","column","end","compiler","main","stack1","fn","program","inverse","noop","useData","document","querySelector","$cc8167df025acb14$var$select","async","$cc8167df025acb14$var$getOptionsGenres","genres","response","fetch","API_KEY","ok","json","Error","text","$cc8167df025acb14$var$getOptions","console","log","dataForGenerationOfOptions","array","map","el","push","markup","innerHTML","insertAdjacentHTML","$cc8167df025acb14$export$c21133b4499f5374"],"version":3,"file":"index.9fbc5a03.js.map"}